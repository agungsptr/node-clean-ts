# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_ENV: development
  APP_PORT: 7000
  APP_NAME: node_clean
  MONGO_USER: root
  MONGO_PW: root
  MONGO_PORT: 27017
  MONGO_DBNAME: node_clean-db
  MONGO_HOST: localhost
  BYCRYPT_SALT: 10
  JWT_SECRET_KEY: secret
  JWT_EXPIRED: 24h
  RATE_LIMIT_MAX: 100
  RATE_LIMIT_MINUTE: 15
  GRPC_PORT: 50051
  
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'yarn'
    - name: Install dependencies
      run: yarn
    - name: Create .env file
      run: |
        echo "NODE_ENV=$NODE_ENV" > .env
        echo "APP_PORT=$APP_PORT" >> .env
        echo "APP_NAME=$APP_NAME" >> .env
        echo "MONGO_USER=$MONGO_USER" >> .env
        echo "MONGO_PW=$MONGO_PW" >> .env
        echo "MONGO_PORT=$MONGO_PORT" >> .env
        echo "MONGO_DBNAME=$MONGO_DBNAME" >> .env
        echo "MONGO_HOST=$MONGO_HOST" >> .env
        echo "BYCRYPT_SALT=$BYCRYPT_SALT" >> .env
        echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> .env
        echo "JWT_EXPIRED=$JWT_EXPIRED" >> .env
        echo "RATE_LIMIT_MAX=$RATE_LIMIT_MAX" >> .env
        echo "RATE_LIMIT_MINUTE=$RATE_LIMIT_MINUTE" >> .env
        echo "GRPC_PORT=$GRPC_PORT" >> .env
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    - name: Setting up infra
      run: make infra
    - name: Run unit test
      run: make test
